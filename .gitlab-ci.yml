variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - lint
  - build
  - release
  - deploy

test lint:
  stage: lint
  image: node:14
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_TAG == null'
      when: always
  variables:
    NODE_ENV: developmment
  cache:
    key: node_modules
    paths:
      - node_modules/
  script:
    - yarn
    - yarn run lint

build latest:
  stage: build
  image: docker:dind
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: on_success
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

release tag:
  stage: release
  image: docker:dind
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_TAG != null'
      when: on_success
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - MAJOR=$(echo $CI_BUILD_TAG | cut -f1 -d.)
    - MINOR=$(echo $CI_BUILD_TAG | cut -f2 -d.)
    - FIX=$(echo $CI_BUILD_TAG | cut -f3 -d.)
    - docker build --pull -t $CI_REGISTRY_IMAGE:$MAJOR.$MINOR.$FIX .
    - docker push $CI_REGISTRY_IMAGE:$MAJOR.$MINOR.$FIX


deploy dev:
 stage: deploy
 tags:
   - dev
 rules:
   - if: '$CI_COMMIT_REF_NAME == "main"'
     when: on_success
 variables:
   GIT_STRATEGY: none
   GIT_CHECKOUT: 'false'
 script:
   - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
   - cd /opt/$CI_ENVIRONMENT_SLUG/$CI_PROJECT_NAMESPACE
   - test -f docker-compose.yml && docker-compose -p $CI_PROJECT_NAMESPACE-$CI_ENVIRONMENT_SLUG pull $CI_PROJECT_NAME
   - test -f docker-compose.yml && docker-compose -p $CI_PROJECT_NAMESPACE-$CI_ENVIRONMENT_SLUG stop $CI_PROJECT_NAME
   - test -f docker-compose.yml && docker-compose -p $CI_PROJECT_NAMESPACE-$CI_ENVIRONMENT_SLUG rm -f $CI_PROJECT_NAME
   - test -f docker-compose.yml && docker-compose -p $CI_PROJECT_NAMESPACE-$CI_ENVIRONMENT_SLUG up -d $CI_PROJECT_NAME

 environment:
   name: dev
   url: https://health.dev.moonion.com


